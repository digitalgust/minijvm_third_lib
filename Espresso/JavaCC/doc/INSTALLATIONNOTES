JavaCC has been installed and used successfully on many platforms
already, some of which are listed below:

----------------------------------------------------------------------

What follows below are answers to the following question from various
users of JavaCC:

LIST ALL PLATFORMS ON WHICH YOU HAVE RUN JAVACC SUCCESSFULLY.

If you wish to send in your contribution, or modify an existing one,
please send us email to "javacc-support@metamata.com" with your
contribution.

Note: The following list may have duplications.  This is available
as both part of the file INSTALLATIONNOTES as well as available from
the web page documentation.

----------------------------------------------------------------------

SunJDK/SparcSolaris2.5
x86 Linux 1.2.13 with JDK 1.0.2-pl2
Sun Ultra-2 Solaris with JDK 1.1b2
Win95
WinNT 4.0
Sun JDK/Windows NT
Sun JDK/Solaris 2
Sun JDK/Windows 95
Microsoft Java VM (jview) on Windows NT 4.0
MS WinNT 4.0 with SunJDK 1.02
Linux 2.x with SunJDK 1.02
RedHat Linux 4.0 using a modified Sun JDK from www.blackdown.org
RedHat Linux 4.0 using Kaffe
Digital UNIX V3.2G Worksystem Software (Rev. 62)
SunJDK and Microsoft Visual J++ on Windows 95
Win NT with java 1.0.2 and J++
SunJDK/Mac (for installation) CodeWarrior/Mac (for developement)
OS/2 JDK (IBM) for OS/2 warp 4
Symantec/WinNT 4.0 Server
MicrosoftJDK/Win95
SunJDK port/Linux
Sparc Solaris 2.5 + Netscape Navigator (ran generated parser as an applet)
Windows NT 4.0 Server + Symantec Visual Cafe 1.0
Windows NT 4.0 Server + Internet Explorer 3.0 (ran generated parser as an applet)
Windows 95 using Symantec's JIT
NT 3.51/4.0, Windows '95 using the Symantec Cafe compiler/JIT VM
IRIX 6.3/JDK
Toba (Java to C translator, http://www.cs.arizona.edu/sumatra/toba/) on Linux
Toba on Irix 6.2
Toba on Solaris 2.5
Toba on Windows NT 4.0
HP-UX tiap8 B.10.10
OSF1
Macintosh Apple MRJ 1.0.2
Macintosh Apple MRJ 1.5
Macintosh Metrowerks Java (CodeWarrior)
AIX
FreeBSD 2.2.2, Sun JDK 1.1.3
Borland JBuilder/Windows 95

----------------------------------------------------------------------

Since JavaCC is completely Java, both JavaCC and the code it generates
will run on all compliant platforms.  We have encountered bugs in
various implementations of Java over the past many months for which we
have incorporated workarounds so that you will not notice any
problems.

JavaCC is being released with a fancy installation program (JInstall)
that understands quite a few hardware and software platforms and
automatically creates scripts to invoke the Java programs that
implement JavaCC.  These scripts get generated into the bin directory
under the installation directory.  JInstall is quite new and may have
some quirks and limitations, but the developer of JInstall is
committed to continue improving it.  The JavaCC web pages contain a
pointer to the JInstall home page, or you may access it directly at:

	http://www.sbktech.org/jinstall10.html

In addition to what you see JInstall doing, there are things that you
don't see that also makes it quite neat - for example, text files are
automatically rendered to be compatible with the target system (by
using the appropriate combination of carriage returns and line feeds).

Essentially, therefore, if everything works well, all you have to do
is type "java JavaCC0_7" (assuming the version you are installing
is 0.7), and answer a couple of questions, and JInstall does
everything else for you.

Just in case, JInstall does not work for you (i.e., it does not
understand your system and therefore does everything but generate the
scripts in the bin directory), then you must create your own scripts
or invoke the Java main programs directly.  Instructions on how to do
this are given below.  But first send a message to the JInstall
developer providing details of your problem so that JInstall can be
improved further.

There is a bug in JDK 1.1 that causes the installation to terminate
in some situations as follows:

% java JavaCC0_7
Packed using jinstall v1.0a1 (http://www.sbktech.org)
Extracting installation code................done
Sorry, could not extract this archive
java.lang.NullPointerException
        at
sun.awt.motif.MComponentPeer.initialize(MComponentPeer.java:75)
        at sun.awt.motif.MComponentPeer.<init>(MComponentPeer.java:99)
        at sun.awt.motif.MCanvasPeer.<init>(MCanvasPeer.java:39)
        at sun.awt.motif.MPanelPeer.<init>(MPanelPeer.java:33)
        at sun.awt.motif.MFramePeer.<init>(MFramePeer.java:47)
        at sun.awt.motif.MToolkit.createFrame(MToolkit.java:153)
        at java.awt.Frame.addNotify(Frame.java)
        at java.awt.Window.show(Window.java)
        at
sbktech.tools.jinstall.runtime.InfoContainer.toString(InfoContainer.java:144)
        at JavaCC.showGUI(install.java:209)
        at JavaCC.<init>(install.java:198)
        at JavaCC.main(install.java:274)
**ERROR failed to install

This happens when the installation program tries to create a GUI.  There
are two workarounds for this:

. Remove (delete or move somewhere else) the file
  "lib/font.properties" from the JDK 1.1 release directory.  This will
  be located at the same place where the "bin" directory containing
  "java", "javacc", etc. are located.  Then try running "java JavaCC0_7"
  again.  We recommend you do this since this will be necessary to
  solve similar problems with your other Java tools.

. Run the installation program in non-GUI mode.  To do this type:
    java JavaCC0_7 -o DirectoryToInstallIn

If you still have problems, please send a message to
javacc-support@metamata.com.  We will send you an alternate
installation - let us know if you prefer a tar or zip verison.  In
this case, you will need to continue reading below for further
instructions.

The following are the instructions you need in case JInstall is not
able to understand your system.  We assume you have a working
knowledge of Java to be able to do this.  There are three steps to it:

1. Add the file JavaCC.zip to your classpath.  You must specify its
   full path.  (Note: add the file, not the directory containing the file
   to your classpath.)

2. To invoke javacc, type: "java COM.sun.labs.javacc.Main"
   To invoke jjtree, type: "java COM.sun.labs.jjtree.Main"
   To invoke jjdoc, type: "java COM.sun.labs.jjdoc.JJDocMain"

3. Create scripts that are specific to your machine to do step 2
   automatically.

In case you still have problems (such as with JavaRunner on a Mac
which cannot handle Java programs that return with System.exit()
calls), we also provide an alternate main program that does not call
System.exit().  These main programs can be invoked as:

   To invoke javacc, type: "java COM.sun.labs.javacc.MacMain"
   To invoke jjtree, type: "java COM.sun.labs.jjtree.MacMain"
   To invoke jjdoc, type: "java COM.sun.labs.jjdoc.JJDocMacMain"

As a last resort, we have provided source code for all the main
programs we use in the src directory.  Try tinkering with these files
to make it work on your platform (so far we don't know of anyone who
has had to go this far to get our tools to work).

Included below are peoples' experiences with installing the earlier
versions of the tool:

----------------------------------------------------------------------

What follows below are answers to the following question from various
users of JavaCC (we've taken the liberty to replace occurrences of the
old name with the new name of the tool):

PLEASE PROVIDE INSTALLATION INSTRUCTIONS IN AS MUCH DETAIL AS YOU CAN
REMEMBER FOR EACH OF THE PLATFORMS LISTED ABOVE.  IF YOU WISH TO
PROVIDE USEFUL UTILITIES TO HELP IN INSTALLATION, WE WELCOME THEM, OR
BETTER STILL, IF YOU ARE WILLING TO SET UP A WEB PAGE ON YOUR SITE, WE
WILL PLACE A LINK TO IT.

If you wish to send in your contribution, or modify an existing one,
please send us email to "javacc-support@metamata.com" with your
contribution.

Note: This is available as both part of the file INSTALLATIONNOTES as
well as available from the web page documentation.

----------------------------------------------------------------------

From: Vince Risi (vincer@icon.co.za)

I have Symantec Cafe 1.5 installed with the Symantec JIT version 2.0.

I am running this on Windows NT 4.0.

I installed jack from install.class to directory E:\. This results in it
being installed in E:\Jack. 

In the \CAFE\BIN directory there is a file called sc.ini. I added to the
CLASSPATH directive already in this file. ;E:\JACK\JAVA. Here case does not 
seem seem to be important.

I added E:\JACK\BIN to the path. From the Start button you select
Control Panel -> System

I created a file called jack.cmd in e:\JACK\BIN with 
java COM.sun.labs.jack.java.Main %1

----------------------------------------------------------------------

From: Walter Korman <wkorman@cs.ucsd.edu>:

Platform: x86 Linux 1.2.13 with JDK 1.0.2-pl2, Sun Ultra-2 Solaris with JDK 1.1b2

I followed precisely those instructions described in the readme files
accompanying the JavaCC distribution.

It was initially slightly unintuitive to run "java install," simply
because this was my first experience with a self-extracting java
program.  However, I think you do explain this on the download web
page, and it should become less of an issue as Java is integrated more
tightly into the various OSs.

----------------------------------------------------------------------

From: Juei Chang <jueic@ix.netcom.com>:

Platform: Sun JDK/Solaris 2, Sun JDK/Windows 95

I created a little executable on Windows 95 so I do have to type
JavaCC's package name everytime I run JavaCC.  Basically it's a little
C++ program using Windows' WinExec() to call java
COM.sun.labs.javacc.Main.  The better way is to use Windows 95's
32-bit CreateProcess() to do it.

----------------------------------------------------------------------

From: kimbo@highway1.com (Kimbo Mundy):

Platform: Microsoft Java VM (jview) on Windows NT 4.0

Long ago, I installed Microsoft Internet Explorer, version 3.01.  This
installed their Java VM.

I downloaded Install.class by clicking on the link in Netscape and
choosing "Save" in the dialog box.  I chose to put it in my Desktop.

Then I started a Command window, cd'd to the Desktop directory, ran
"jview Install", and answered "D:\Java" at the prompt.

Then I used "Start - Settings - Control Panel" and opened "System",
switched to the "Environment" page, selected the CLASSPATH User
Variable (which for me already existed), added "D:\Java\JavaCC;" to
the path in the Value edit box, clicked "Set" to update the variable,
and clicked "OK" to make the change.

After that, I could just run "jview /q COM.sun.labs.javacc.Main Foo.jj"
to create the .java files.

I used Symantec Visual Cafe, Preview Release II to build these.  The
resulting class files always worked with jview, but sometimes they
caused a failure under Cafe.  (I have not had enough time to isolate
this, however.)

----------------------------------------------------------------------

From: Muthu Muthuraman <muthu@cs.mun.ca>:

Platform: Digital UNIX V3.2G Worksystem Software (Rev. 62)

1. downloaded the install.class 
2. installed the above class as shown below:
	java install

3. when requested for dir name,
	gave the target directory name
		
4. javacc was uncompressed in the specified dir.

5. now typed sh install.sh
	which created the javacc file in bin directory.
	Now *EDITED* the javacc file
	original javacc file looked something like this:
		#\!/bin/csh -f
		java COM.sun.labs.javacc.Main $*

	the resultant file looks liks :
		#!/bin/csh -f
		setenv CLASSPATH /users/cs/grad/muthu/myjavacc/JavaCC/java; java COM.sun.labs.javacc.Main $*

	(i think k shell does not recogonize the "\" in the
	first line and hence i removed it)
	in the second line, set the directory appropriately.

----------------------------------------------------------------------

From: Michael Farrar <farrar@primenet.com>:

Platform: SunJDK and Microsoft Visual J++ on Windows 95

1.  Execute install.class with jview.
		
	D:\JavaTools>jview install

2.  Choose a directory at the prompt.

	Microsoft (R) Command-line Loader for Java (tm) Version 1.00.6211
	Copyright (C) Microsoft Corp 1996. All rights reserved.
	Packed using jinstall v0.3 (http://www.sbktech.org)
	Package : JavaCC
	Version : 0.6.-9 (minor bug fixes)
	Please enter a directory to install [X to abort]: .

3.  Since we installed in the directory \JavaTools the files are now reside
in \JavaTools\JavaCC.  Go to the bin directory \JavaTools\JavaCC\bin and create
a batch file to set up the classpath environment variable and execute javacc.
The following is a copy of the batch file (JavaCC.bat) I use:

	echo on
	set classpath=d:\JavaTools\JavaCC\java
	d:\JavaTools\Jdk\bin\java COM.sun.labs.javacc.Main %1

4.  Now on to how I use JavaCC in Microsofts Developers Studio.  Set up a 
sub-project for the building of the javacc grammar, ie Grammar.
Add the grammar file, ie "Asm.jj" to the sub-project.  Pull up
the Project Settings dialog, accessed from the menu choice Build - Settings.
Add the statement to execute the javacc batch file in the Build commands
field.

	d:\JavaTools\JavaCC\bin\javacc Grammar\Asm.jj

Specify the files generated from javacc in the Output files field.

	Asm.java
	AsmConstants.java
	AsmTokenManager.java
	Token.java
	ParseError.java
	ASCII_CharStream.java

Insert the files generated by javacc into the top level project.

You are now ready to build your javacc grammars.

----------------------------------------------------------------------

From: mellier@iissun4.unil.ch (Pierre Mellier):

Platform: SunJDK/Mac (for installation) CodeWarrior/Mac (for developement)

The installation of JavaCC could be done on Mac only with SunJDK. Other Java
environement have problems with the line argument. I do the following.
a. Download of JavaCC.
b. Use Resedit to give the correct type (CO=E5k) and creator (Javar) (with
the 'GetFile and Folder' item of the 'File' Menu) to the file
install.class, so JavaRunner can see it when you try to open it.
c. Run Java Runner and locate the file install.class with the File browser.
d. Next click OK in the Argument line box.
e. Next give the path for the installation (like .) in the Argument line
(stdin) box, click OK.
f. click Cancel in the next box and the installation will proceed.
g. usally I add the following main class which use the File browser!

import java.io.*;
import java.awt.*;
import COM.sun.labs.javacc.MacMain;

public class JavaCC {

        public static void main(String args[]) {
                if (args.length =3D=3D 0) {
                        String message =3D "Where is the grammar";
                        DataInputStream dataStream =3D null;
                        FileInputStream fileStream;
                        FileDialog inputFileDialog;
                        Frame theFrame =3D new Frame("JavaCC");
                        inputFileDialog =3D new
=46ileDialog(theFrame,message,FileDialog.LOAD);
                        inputFileDialog.show();
                        inputFileDialog.pack();
                        File inputFile =3D new
=46ile(inputFileDialog.getDirectory(),inputFileDialog.getFile());
                        String argument[] =3D {inputFile.getAbsolutePath()};
                        COM.sun.labs.javacc.MacMain.main(argument);
                }
                else
                        COM.sun.labs.javacc.MacMain.main(args);
        }

}

----------------------------------------------------------------------

From: Joe Hutchinson <sasjeh@unx.sas.com>:

Platform: Windows NT, Windows 95

   Download install.class

   run java on install.class

   For convenience, I create a file javacc.bat containing:

    @java COM.sun.labs.javacc.Main %1 %2 %3 %4 %5 %6 %7 %8 %9

   so that I can use 

    javacc xxx.jj

   instead of having to type 

    java COM.sum.laba.javacc.Main xxx.jj

----------------------------------------------------------------------

From: Tony Gee <tgee@gpu.srv.ualberta.ca>:

Platform: MicrosoftJDK/Win95, SunJDK port/Linux

   1.  Download install.class onto local disk..
   2.  Run java interpreter on install.class to begin installation.

		   jview install.class (MS-JDK) || 
		   java install.class (SunJDK)

   3.  You will then be prompted to provide a directory in which to install
       JavaCC to.  Make sure this directory exists.  If not, create it first
       and then run the installer.
   4.  Once installer is done, edit your CLASSPATH to include the directory
       where JavaCC's classes are stored.
   5.  Reboot computer.
   6.  Try to run JavaCC be entering:

		   java Com.sun.labs.javacc

----------------------------------------------------------------------

From: Paul Fisher <pnfisher@pams.ncsu.edu>:

Platform: SunJDK/Linux, ported by Randy Chapman

   Assuming that your Linux kernel is configured for internal Java
   support, simply typing ./install.class will get the install
   process started.  If your Linux kernel has not been configured
   for internal Java support, then simply executing the Java runtime
   from the JDK as normal will work -- "java install".  JavaCC can
   be installed to any directory; I installed to "~/javacc", and usage
   of the program is straightforward, assuming that the 
   documentation is read first.

----------------------------------------------------------------------

From: Doug South <dsouth@squirrel.com.au>:

Platform: Windows 95 using Symantec's JIT, Linux

It's been so long... The main problem with using Symantec's JIT from the
command line is that it ignores the environment variables, i.e. changing
CLASSPATH to point to where JavaCC is installed doesn't work. So I use a
simple batch file for convience (saves a lot of typing):

--- Start of DOS batch file ---

@echo off
java -classpath
c:\cafe\java\lib\classes.zip;c:\java\javacc-0.6-9\javacc\java
COM.sun.labs.javacc.Main %1

--- End of DOS batch file ---

----------------------------------------------------------------------
